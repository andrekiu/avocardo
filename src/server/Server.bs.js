// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Express = require("bs-express/src/Express.js");
var Process = require("process");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var AnswerController$Avocardo = require("./answers/AnswerController.bs.js");
var PronounController$Avocardo = require("./exercises/PronounController.bs.js");

var app = Express.express(undefined);

Express.App.use(app, Express.Middleware.json(undefined, undefined, undefined, undefined));

function makeSuccessJson(response) {
  var json = {};
  json["success"] = true;
  json["data"] = response;
  return json;
}

Express.App.get(app, "/pronoun_exercises", Express.PromiseMiddleware.from(function (param, param$1, res) {
          return PronounController$Avocardo.genJsonResponse(undefined).then(function (json) {
                      return Promise.resolve(Express.$$Response.sendJson(makeSuccessJson(json), res));
                    });
        }));

Express.App.post(app, "/answer", Express.PromiseMiddleware.from(function (param, req, res) {
          return AnswerController$Avocardo.genSave(Belt_Option.getExn(Express.$$Request.bodyJSON(req))).then(function (param) {
                      return Promise.resolve(Express.$$Response.sendJson(makeSuccessJson(1), res));
                    });
        }));

function onListen(e) {
  var val;
  try {
    val = e;
  }
  catch (raw_e){
    var e$1 = Caml_js_exceptions.internalToOCamlException(raw_e);
    if (e$1.RE_EXN_ID === Js_exn.$$Error) {
      console.log(e$1._1);
      return Process.exit(1);
    }
    throw e$1;
  }
  console.log("Listening at http://127.0.0.1:3000");
  
}

var server = Express.App.listen(app, 3000, undefined, onListen, undefined);

exports.app = app;
exports.makeSuccessJson = makeSuccessJson;
exports.onListen = onListen;
exports.server = server;
/* app Not a pure module */
