// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");

function toString(w) {
  return w._0;
}

function word(w) {
  if (w.TAG) {
    return Json_encode.object_({
                hd: [
                  "word",
                  w._0
                ],
                tl: {
                  hd: [
                    "is_solution",
                    false
                  ],
                  tl: /* [] */0
                }
              });
  } else {
    return Json_encode.object_({
                hd: [
                  "word",
                  w._0
                ],
                tl: {
                  hd: [
                    "is_solution",
                    true
                  ],
                  tl: /* [] */0
                }
              });
  }
}

function exercise(param) {
  return Json_encode.object_({
              hd: [
                "quiz",
                param.quiz
              ],
              tl: {
                hd: [
                  "nouns",
                  Json_encode.array(word, param.nouns)
                ],
                tl: {
                  hd: [
                    "pronouns",
                    Json_encode.array(word, param.pronouns)
                  ],
                  tl: /* [] */0
                }
              }
            });
}

var Encode = {
  word: word,
  exercise: exercise
};

function word$1(json) {
  var w = Json_decode.field("word", Json_decode.string, json);
  if (Json_decode.field("is_solution", Json_decode.bool, json)) {
    return {
            TAG: 0,
            _0: w,
            [Symbol.for("name")]: "Right"
          };
  } else {
    return {
            TAG: 1,
            _0: w,
            [Symbol.for("name")]: "Wrong"
          };
  }
}

function exercise$1(json) {
  return {
          quiz: Json_decode.field("quiz", Json_decode.string, json),
          pronouns: Json_decode.field("pronouns", (function (param) {
                  return Json_decode.array(word$1, param);
                }), json),
          nouns: Json_decode.field("nouns", (function (param) {
                  return Json_decode.array(word$1, param);
                }), json)
        };
}

var Decode = {
  word: word$1,
  exercise: exercise$1
};

function pickRandom(exercises) {
  return Caml_array.caml_array_get(Belt_Array.shuffle(exercises), 0);
}

exports.toString = toString;
exports.Encode = Encode;
exports.Decode = Decode;
exports.pickRandom = pickRandom;
/* No side effect */
