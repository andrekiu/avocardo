// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var $$String = require("bs-platform/lib/js/string.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");

var csv = "\navocado,el|*la,*palta|palto|pata\npepper,*el|la,ahi|*aji|aha\nwatermelon,el|*la,sandio|*sandia|sandalia\nhealth,el|*la,*salud|saluda|saludo\nhair,*el|la,caballo|*cabello|cabeza\ncat,*el|la,*gato|mato|rato\nnoodles,*los|el|la,*fideos|feos|trineos\nbull,*el|la,ternero|*toro|trofeo\n";

function toString(w) {
  return w._0;
}

function toWord(str) {
  if (str === "" || Caml_string.get(str, 0) !== /* "*" */42) {
    return {
            TAG: 1,
            _0: str,
            [Symbol.for("name")]: "Wrong"
          };
  } else {
    return {
            TAG: 0,
            _0: $$String.sub(str, 1, str.length - 1 | 0),
            [Symbol.for("name")]: "Right"
          };
  }
}

function getPronounExercices(param) {
  var __x = $$String.split_on_char(/* "\n" */10, csv);
  return $$Array.of_list(List.fold_left((function (sum, line) {
                    var match = $$String.split_on_char(/* "," */44, line);
                    if (!match) {
                      return sum;
                    }
                    var match$1 = match.tl;
                    if (!match$1) {
                      return sum;
                    }
                    var match$2 = match$1.tl;
                    if (match$2 && !match$2.tl) {
                      return {
                              hd: {
                                quiz: match.hd,
                                pronouns: $$Array.of_list(List.map(toWord, $$String.split_on_char(/* "|" */124, match$1.hd))),
                                nouns: $$Array.of_list(List.map(toWord, $$String.split_on_char(/* "|" */124, match$2.hd)))
                              },
                              tl: sum
                            };
                    } else {
                      return sum;
                    }
                  }), /* [] */0, __x));
}

function word(w) {
  if (w.TAG) {
    return Json_encode.object_({
                hd: [
                  "word",
                  w._0
                ],
                tl: {
                  hd: [
                    "is_solution",
                    false
                  ],
                  tl: /* [] */0
                }
              });
  } else {
    return Json_encode.object_({
                hd: [
                  "word",
                  w._0
                ],
                tl: {
                  hd: [
                    "is_solution",
                    true
                  ],
                  tl: /* [] */0
                }
              });
  }
}

function exercise(param) {
  return Json_encode.object_({
              hd: [
                "quiz",
                param.quiz
              ],
              tl: {
                hd: [
                  "nouns",
                  Json_encode.array(word, param.nouns)
                ],
                tl: {
                  hd: [
                    "pronouns",
                    Json_encode.array(word, param.pronouns)
                  ],
                  tl: /* [] */0
                }
              }
            });
}

var Encode = {
  word: word,
  exercise: exercise
};

function word$1(json) {
  var w = Json_decode.field("word", Json_decode.string, json);
  if (Json_decode.field("is_solution", Json_decode.bool, json)) {
    return {
            TAG: 0,
            _0: w,
            [Symbol.for("name")]: "Right"
          };
  } else {
    return {
            TAG: 1,
            _0: w,
            [Symbol.for("name")]: "Wrong"
          };
  }
}

function exercise$1(json) {
  return {
          quiz: Json_decode.field("quiz", Json_decode.string, json),
          pronouns: Json_decode.field("pronouns", (function (param) {
                  return Json_decode.array(word$1, param);
                }), json),
          nouns: Json_decode.field("nouns", (function (param) {
                  return Json_decode.array(word$1, param);
                }), json)
        };
}

var Decode = {
  word: word$1,
  exercise: exercise$1
};

function decode(json) {
  return Json_decode.field("data", exercise$1, json);
}

function pickRandom(exercises) {
  return Caml_array.caml_array_get(Belt_Array.shuffle(exercises), 0);
}

function jsonResponse(param) {
  var exercises = getPronounExercices(undefined);
  return exercise(Caml_array.caml_array_get(Belt_Array.shuffle(exercises), 0));
}

exports.csv = csv;
exports.toString = toString;
exports.toWord = toWord;
exports.getPronounExercices = getPronounExercices;
exports.Encode = Encode;
exports.Decode = Decode;
exports.decode = decode;
exports.pickRandom = pickRandom;
exports.jsonResponse = jsonResponse;
/* No side effect */
